#!/system/bin/sh
# Vacuum and reindex sqlite databases on boot

LOGCAT="log -p i -t boot_sqlite3"
LOG=/data/local/logs/boot_sqlite3.log

function log() {
	$LOGCAT $1
	echo $1 | tee -a $LOG
}

function sqlite3() {
	# Check if log dir exists
	if [ ! -d /system/etc/logs ]; then
		$LOGCAT "Error: /system/etc/logs not found!";
		mkdir -p /data/local/logs
		SUCCESS=$?
		if [[ $SUCCESS != 0 ]]; then
			$LOGCAT "Error: Unable to create /data/local/logs!"
		fi
	fi
	
    	# Create log file
    	date > $LOG;
    	$log "Creating new LOG file";
	
	# Check if logfile was created properly
	if [ ! -e $LOG ]; then
    	    $LOGCAT "Error: Unable to create logfile!"
    	fi
	
	$log "Executing SQlite3!"
	
	$log "Beginning /data optimization"
	COUNT=0;
	for i in \
	`find /data -iname "*.db"`;
	do \
		/system/xbin/sqlite3 $i 'VACUUM;' | tee -a $LOG;
		SUCCESS=$?
		if [[ $SUCCESS != 0 ]]; then
			$log "Couldn't vaccuum $i";
		fi
		/system/xbin/sqlite3 $i 'REINDEX;' | tee -a $LOG;
		SUCCESS=$?
		if [[ $SUCCESS != 0 ]]; then
			$log "Couldn't re-index $i";
		fi
		$log "Optimized $i";
		COUNT=$((COUNT+1));
	done;
	$log "Optimized $COUNT /data databases";
	
	$log "Beginning /sdcard optimization";
	COUNT=0;
	for i in \
	`find /sdcard -iname "*.db"`;
	do \
		/system/xbin/sqlite3 $i 'VACUUM;' | tee -a $LOG;
		SUCCESS=$?
                if [[ $SUCCESS != 0 ]]; then
                        $log "Couldn't vaccuum $i";
                fi
		/system/xbin/sqlite3 $i 'REINDEX;' | tee -a $LOG;
		SUCCESS=$?
                if [[ $SUCCESS != 0 ]]; then
                        $log "Couldn't re-index $i";
                fi
		$log "Optimized $i";
		COUNT=$((COUNT+1));
	done;
	$log "Optimized $COUNT /sdcard databases";

	$log "SQlite3 optimization complete!";
}

$log "Running boot_sqlite3...";
su -c sqlite3 &
